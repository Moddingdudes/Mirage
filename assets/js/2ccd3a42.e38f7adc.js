"use strict";(self.webpackChunkmirage_docs=self.webpackChunkmirage_docs||[]).push([[351],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>p});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),h=c(a),p=r,v=h["".concat(s,".").concat(p)]||h[p]||u[p]||l;return a?n.createElement(v,i(i({ref:t},d),{},{components:a})):n.createElement(v,i({ref:t},d))}));function p(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},75638:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const l={id:"NetworkIdentity",title:"NetworkIdentity"},i="Class NetworkIdentity",o={unversionedId:"reference/Mirage/NetworkIdentity",id:"reference/Mirage/NetworkIdentity",title:"NetworkIdentity",description:"The NetworkIdentity identifies objects across the network, between server and clients.",source:"@site/docs/reference/Mirage/NetworkIdentity.md",sourceDirName:"reference/Mirage",slug:"/reference/Mirage/NetworkIdentity",permalink:"/Mirage/docs/reference/Mirage/NetworkIdentity",draft:!1,editUrl:"https://github.com/MirageNet/Mirage/tree/master/doc/docs/reference/Mirage/NetworkIdentity.md",tags:[],version:"current",frontMatter:{id:"NetworkIdentity",title:"NetworkIdentity"},sidebar:"api",previous:{title:"NetworkIdentity.TransformSpawnSettings",permalink:"/Mirage/docs/reference/Mirage/NetworkIdentity.TransformSpawnSettings"},next:{title:"NetworkIdentitySerializers",permalink:"/Mirage/docs/reference/Mirage/NetworkIdentitySerializers"}},s={},c=[{value:"Inheritance",id:"inheritance",level:5},{value:"Syntax",id:"syntax",level:5},{value:"Fields",id:"fields",level:3},{value:"SpawnSettings",id:"spawnsettings",level:4},{value:"Declaration",id:"declaration",level:5},{value:"observers",id:"observers",level:4},{value:"Declaration",id:"declaration-1",level:5},{value:"ServerObjectManager",id:"serverobjectmanager",level:4},{value:"Declaration",id:"declaration-2",level:5},{value:"ClientObjectManager",id:"clientobjectmanager",level:4},{value:"Declaration",id:"declaration-3",level:5},{value:"Properties",id:"properties",level:3},{value:"IsClient",id:"isclient",level:4},{value:"Declaration",id:"declaration-4",level:5},{value:"IsServer",id:"isserver",level:4},{value:"Declaration",id:"declaration-5",level:5},{value:"IsLocalClient",id:"islocalclient",level:4},{value:"Declaration",id:"declaration-6",level:5},{value:"IsLocalPlayer",id:"islocalplayer",level:4},{value:"Declaration",id:"declaration-7",level:5},{value:"HasAuthority",id:"hasauthority",level:4},{value:"Declaration",id:"declaration-8",level:5},{value:"NetId",id:"netid",level:4},{value:"Declaration",id:"declaration-9",level:5},{value:"IsSceneObject",id:"issceneobject",level:4},{value:"Declaration",id:"declaration-10",level:5},{value:"IsPrefab",id:"isprefab",level:4},{value:"Declaration",id:"declaration-11",level:5},{value:"IsSpawned",id:"isspawned",level:4},{value:"Declaration",id:"declaration-12",level:5},{value:"Server",id:"server",level:4},{value:"Declaration",id:"declaration-13",level:5},{value:"World",id:"world",level:4},{value:"Declaration",id:"declaration-14",level:5},{value:"Client",id:"client",level:4},{value:"Declaration",id:"declaration-15",level:5},{value:"Owner",id:"owner",level:4},{value:"Declaration",id:"declaration-16",level:5},{value:"NetworkBehaviours",id:"networkbehaviours",level:4},{value:"Declaration",id:"declaration-17",level:5},{value:"Visibility",id:"visibility",level:4},{value:"Declaration",id:"declaration-18",level:5},{value:"PrefabHash",id:"prefabhash",level:4},{value:"Declaration",id:"declaration-19",level:5},{value:"OnStartServer",id:"onstartserver",level:4},{value:"Declaration",id:"declaration-20",level:5},{value:"OnStartClient",id:"onstartclient",level:4},{value:"Declaration",id:"declaration-21",level:5},{value:"OnStartLocalPlayer",id:"onstartlocalplayer",level:4},{value:"Declaration",id:"declaration-22",level:5},{value:"OnAuthorityChanged",id:"onauthoritychanged",level:4},{value:"Declaration",id:"declaration-23",level:5},{value:"OnOwnerChanged",id:"onownerchanged",level:4},{value:"Declaration",id:"declaration-24",level:5},{value:"OnStopClient",id:"onstopclient",level:4},{value:"Declaration",id:"declaration-25",level:5},{value:"OnStopServer",id:"onstopserver",level:4},{value:"Declaration",id:"declaration-26",level:5},{value:"SpawnedFromInstantiate",id:"spawnedfrominstantiate",level:4},{value:"Declaration",id:"declaration-27",level:5},{value:"Methods",id:"methods",level:3},{value:"RebuildObservers(Boolean)",id:"rebuildobserversboolean",level:4},{value:"Declaration",id:"declaration-28",level:5},{value:"Parameters",id:"parameters",level:5},{value:"AssignClientAuthority(INetworkPlayer)",id:"assignclientauthorityinetworkplayer",level:4},{value:"Declaration",id:"declaration-29",level:5},{value:"Parameters",id:"parameters-1",level:5},{value:"RemoveClientAuthority()",id:"removeclientauthority",level:4},{value:"Declaration",id:"declaration-30",level:5}],d={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"class-networkidentity"},"Class NetworkIdentity"),(0,r.kt)("p",null,"The NetworkIdentity identifies objects across the network, between server and clients.\nIts primary data is a NetworkInstanceId which is allocated by the server and then set on clients.\nThis is used in network communications to be able to lookup game objects on different machines."),(0,r.kt)("div",{class:"inheritance"},(0,r.kt)("h5",{id:"inheritance"},"Inheritance"),(0,r.kt)("div",{class:"level",style:{"--data-index":0}},"System.Object")),(0,r.kt)("h5",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public sealed class NetworkIdentity : MonoBehaviour\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"spawnsettings"},"SpawnSettings"),(0,r.kt)("h5",{id:"declaration"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkIdentity.TransformSpawnSettings SpawnSettings\n")),(0,r.kt)("h4",{id:"observers"},"observers"),(0,r.kt)("p",null,"The set of network connections (players) that can see this object."),(0,r.kt)("h5",{id:"declaration-1"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public readonly HashSet<INetworkPlayer> observers\n")),(0,r.kt)("h4",{id:"serverobjectmanager"},"ServerObjectManager"),(0,r.kt)("h5",{id:"declaration-2"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public ServerObjectManager ServerObjectManager\n")),(0,r.kt)("h4",{id:"clientobjectmanager"},"ClientObjectManager"),(0,r.kt)("p",null,"The ClientObjectManager is present only for client instances."),(0,r.kt)("h5",{id:"declaration-3"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public ClientObjectManager ClientObjectManager\n")),(0,r.kt)("h3",{id:"properties"},"Properties"),(0,r.kt)("h4",{id:"isclient"},"IsClient"),(0,r.kt)("p",null,"Returns true if running as a client and this object was spawned by a server."),(0,r.kt)("h5",{id:"declaration-4"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsClient { get; }\n")),(0,r.kt)("h4",{id:"isserver"},"IsServer"),(0,r.kt)("p",null,"Returns true if NetworkServer.active and server is not stopped."),(0,r.kt)("h5",{id:"declaration-5"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsServer { get; }\n")),(0,r.kt)("h4",{id:"islocalclient"},"IsLocalClient"),(0,r.kt)("p",null,"Returns true if we","'","re on host mode."),(0,r.kt)("h5",{id:"declaration-6"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsLocalClient { get; }\n")),(0,r.kt)("h4",{id:"islocalplayer"},"IsLocalPlayer"),(0,r.kt)("p",null,"This returns true if this object is the one that represents the player on the local machine.\nThis is set when the server has spawned an object for this particular client."),(0,r.kt)("h5",{id:"declaration-7"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsLocalPlayer { get; }\n")),(0,r.kt)("h4",{id:"hasauthority"},"HasAuthority"),(0,r.kt)("p",null,"This returns true if this object is the authoritative player object on the client.\nThis value is determined at runtime. For most objects, authority is held by the server.\nFor objects that had their authority set by AssignClientAuthority on the server, this will be true on the client that owns the object. NOT on other clients."),(0,r.kt)("h5",{id:"declaration-8"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool HasAuthority { get; }\n")),(0,r.kt)("h4",{id:"netid"},"NetId"),(0,r.kt)("p",null,"Unique identifier for this particular object instance, used for tracking objects between networked clients and the server.\nThis is a unique identifier for this particular GameObject instance. Use it to track GameObjects between networked clients and the server."),(0,r.kt)("h5",{id:"declaration-9"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public uint NetId { get; }\n")),(0,r.kt)("h4",{id:"issceneobject"},"IsSceneObject"),(0,r.kt)("p",null,"Is this object part of a scene and have a Scene Id?"),(0,r.kt)("h5",{id:"declaration-10"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsSceneObject { get; }\n")),(0,r.kt)("h4",{id:"isprefab"},"IsPrefab"),(0,r.kt)("p",null,"Is this object a prefab and have a  so that it can be spawned over the network"),(0,r.kt)("h5",{id:"declaration-11"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsPrefab { get; }\n")),(0,r.kt)("h4",{id:"isspawned"},"IsSpawned"),(0,r.kt)("p",null,"Has this object been spawned and have a "),(0,r.kt)("h5",{id:"declaration-12"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsSpawned { get; }\n")),(0,r.kt)("h4",{id:"server"},"Server"),(0,r.kt)("p",null,"The NetworkServer associated with this NetworkIdentity."),(0,r.kt)("h5",{id:"declaration-13"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkServer Server { get; }\n")),(0,r.kt)("h4",{id:"world"},"World"),(0,r.kt)("p",null,"The world this object exists in"),(0,r.kt)("h5",{id:"declaration-14"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkWorld World { get; }\n")),(0,r.kt)("h4",{id:"client"},"Client"),(0,r.kt)("p",null,"The NetworkClient associated with this NetworkIdentity."),(0,r.kt)("h5",{id:"declaration-15"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkClient Client { get; }\n")),(0,r.kt)("h4",{id:"owner"},"Owner"),(0,r.kt)("p",null,"The INetworkPlayer associated with this . This property is only valid on server\nUse it to return details such as the connection","'","s identity, IP address and ready status."),(0,r.kt)("h5",{id:"declaration-16"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public INetworkPlayer Owner { get; }\n")),(0,r.kt)("h4",{id:"networkbehaviours"},"NetworkBehaviours"),(0,r.kt)("p",null,"Array of NetworkBehaviours associated with this NetworkIdentity. Can be in child GameObjects."),(0,r.kt)("h5",{id:"declaration-17"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkBehaviour[] NetworkBehaviours { get; }\n")),(0,r.kt)("h4",{id:"visibility"},"Visibility"),(0,r.kt)("h5",{id:"declaration-18"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public NetworkVisibility Visibility { get; }\n")),(0,r.kt)("h4",{id:"prefabhash"},"PrefabHash"),(0,r.kt)("h5",{id:"declaration-19"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public int PrefabHash { get; }\n")),(0,r.kt)("h4",{id:"onstartserver"},"OnStartServer"),(0,r.kt)("p",null,"This is invoked for NetworkBehaviour objects when they become active on the server.\nThis could be triggered by NetworkServer.Start() for objects in the scene, or by ServerObjectManager.Spawn() for objects you spawn at runtime.\nThis will be called for objects on a ",'"',"host",'"'," as well as for object on a dedicated server.\nOnStartServer is invoked before this object is added to collection of spawned objects"),(0,r.kt)("h5",{id:"declaration-20"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IAddLateEvent OnStartServer { get; }\n")),(0,r.kt)("h4",{id:"onstartclient"},"OnStartClient"),(0,r.kt)("p",null,"Called on every NetworkBehaviour when it is activated on a client.\nObjects on the host have this function called, as there is a local client on the host. The values of SyncVars on object are guaranteed to be initialized\ncorrectly with the latest state from the server when this function is called on the client."),(0,r.kt)("h5",{id:"declaration-21"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IAddLateEvent OnStartClient { get; }\n")),(0,r.kt)("h4",{id:"onstartlocalplayer"},"OnStartLocalPlayer"),(0,r.kt)("p",null,"Called when the local player object has been set up.\nThis happens after OnStartClient(), as it is triggered by an ownership message from the server. This is an appropriate place to activate components or\nfunctionality that should only be active for the local player, such as cameras and input."),(0,r.kt)("h5",{id:"declaration-22"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IAddLateEvent OnStartLocalPlayer { get; }\n")),(0,r.kt)("h4",{id:"onauthoritychanged"},"OnAuthorityChanged"),(0,r.kt)("p",null,"This is invoked on behaviours that have authority given or removed, see\nThis is called after  and before "),(0,r.kt)("p",null,"When  or  is called on the server, this will be called on the client that owns the object."),(0,r.kt)("p",null,"When an object is spawned with  with a NetworkConnection parameter included,\nthis will be called on the client that owns the object."),(0,r.kt)("p",null,"NOTE: this even is only called for client and host"),(0,r.kt)("h5",{id:"declaration-23"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IAddLateEvent<bool> OnAuthorityChanged { get; }\n")),(0,r.kt)("h4",{id:"onownerchanged"},"OnOwnerChanged"),(0,r.kt)("p",null,"This is invoked on behaviours that have an owner assigned.\nThis even is only called on server\nSee  for more comments on owner and authority"),(0,r.kt)("h5",{id:"declaration-24"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IAddLateEvent<INetworkPlayer> OnOwnerChanged { get; }\n")),(0,r.kt)("h4",{id:"onstopclient"},"OnStopClient"),(0,r.kt)("p",null,"This is invoked on clients when the server has caused this object to be destroyed.\nThis can be used as a hook to invoke effects or do client specific cleanup."),(0,r.kt)("h5",{id:"declaration-25"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IAddLateEvent OnStopClient { get; }\n")),(0,r.kt)("h4",{id:"onstopserver"},"OnStopServer"),(0,r.kt)("p",null,"This is called on the server when the object is unspawned"),(0,r.kt)("h5",{id:"declaration-26"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IAddLateEvent OnStopServer { get; }\n")),(0,r.kt)("h4",{id:"spawnedfrominstantiate"},"SpawnedFromInstantiate"),(0,r.kt)("h5",{id:"declaration-27"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool SpawnedFromInstantiate { get; }\n")),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("h4",{id:"rebuildobserversboolean"},"RebuildObservers(Boolean)"),(0,r.kt)("p",null,"This causes the set of players that can see this object to be rebuild.\nThe OnRebuildObservers callback function will be invoked on each NetworkBehaviour."),(0,r.kt)("h5",{id:"declaration-28"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void RebuildObservers(bool initialize)\n")),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"System.Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"initialize"),(0,r.kt)("td",{parentName:"tr",align:null},"True if this is the first time.")))),(0,r.kt)("h4",{id:"assignclientauthorityinetworkplayer"},"AssignClientAuthority(INetworkPlayer)"),(0,r.kt)("p",null,"Assign control of an object to a client via the client","'","s\nThis causes hasAuthority to be set on the client that owns the object, and NetworkBehaviour.OnStartAuthority will be called on that client. This object then will be\nin the NetworkConnection.clientOwnedObjects list for the connection.\nAuthority can be removed with RemoveClientAuthority. Only one client can own an object at any time. This does not need to be called for player objects, as their\nauthority is setup automatically."),(0,r.kt)("h5",{id:"declaration-29"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void AssignClientAuthority(INetworkPlayer player)\n")),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Mirage.INetworkPlayer"),(0,r.kt)("td",{parentName:"tr",align:null},"player"),(0,r.kt)("td",{parentName:"tr",align:null},"The connection of the client to assign authority to.")))),(0,r.kt)("h4",{id:"removeclientauthority"},"RemoveClientAuthority()"),(0,r.kt)("p",null,"Removes ownership for an object.\nThis applies to objects that had authority set by AssignClientAuthority, or  with a NetworkConnection\nparameter included.\nAuthority cannot be removed for player objects."),(0,r.kt)("h5",{id:"declaration-30"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void RemoveClientAuthority()\n")))}u.isMDXComponent=!0}}]);